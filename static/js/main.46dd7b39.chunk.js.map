{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/Popup/Popup.js","axios/axios-card.js","containers/CardForm/CardForm.js","containers/Main/Main.js","App.js","index.js"],"names":["isInvalid","_ref","valid","Input","props","cls","inputType","type","maximumLength","htmlFor","push","react_default","a","createElement","className","join","id","value","maxLength","onChange","label","errorMessage","Button","onClick","disabled","children","PopupCustom","reactjs_popup_es","open","close","axios","create","baseURL","CardForm","state","isAnyCard","isAnyCards","isFormValid","formControls","card","validation","number","length","cardCode","isCardCorrect","isCardFound","applyHandler","_callee","cardData","response","objectCard","regenerator_default","wrap","_context","prev","next","_this","setState","get","concat","sent","data","code","discount","toFoundPopup","toSaveCardData","_toClearState","toNotCorrectPopup","t0","console","log","stop","submitHandler","event","preventDefault","onChangeHandler","controlName","Object","objectSpread","control","target","touched","validateControl","keys","forEach","name","obj","isFindCard","this","item","prevState","isValid","val","is","_this2","map","index","UI_Input_Input","key","Popup_Popup","secretNumber","slice","String","onSubmit","renderDivCard","renderInputs","renderPopup","UI_Button_Button","Component","Main","haveCard","isHaveCardHandler","containers_CardForm_CardForm","App","containers_Main_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46dd7b39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Input.css'\r\n\r\nfunction isInvalid({valid}) {\r\n    return !valid\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const cls=[\r\n        'input'\r\n    ]\r\n    \r\n    const inputType = props.type || 'text';\r\n\r\n    const maximumLength = props.maximumLength || '';\r\n\r\n    const htmlFor = inputType;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push('invalid')        \r\n    } \r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            \r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                maxLength={maximumLength}\r\n                onChange={props.onChange}\r\n            />  \r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage}</span>\r\n                    : null\r\n            } \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nimport './Button.css'\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className=\"primary\"\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport './Popup.css'\r\n \r\nconst PopupCustom = (props) => (\r\n    <Popup open={true} >\r\n\t    {close => (\r\n\t      \t<div className=\"modal\">     \r\n\t        \r\n\t\t        <div className=\"content\">\r\n\t\t          \t{props.label}\r\n\t\t        </div>\r\n\t\t        <div className=\"actions\">\r\n\t\t          \r\n\t\t          \t<button\r\n\t\t            \tclassName=\"button\"\r\n\t\t            \tonClick={() => { close()}}\r\n\t\t          \t>\r\n\t\t            \tContinue\r\n\t\t          \t</button>\r\n\t\t        </div>\r\n\t      \t</div>\r\n\t    )}\r\n  \t</Popup>\r\n);\r\n\r\nexport default PopupCustom","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:4000/'\r\n})\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport PopupCustom from '../../components/UI/Popup/Popup';\r\n\r\nimport is from 'is_js'\r\nimport axios from '../../axios/axios-card'\r\n\r\nimport './CardForm.css'\r\n\r\n\r\n\r\nclass CardForm extends Component {\r\n\r\n    state = {\r\n        isAnyCard:false,\r\n        isAnyCards:[],\r\n        isFormValid: false,\r\n        formControls: {\r\n            card: {\r\n                value: '',\r\n                type: '',\r\n                label: '',\r\n                errorMessage: 'Insert correct card number',\r\n                maximumLength:19,\r\n                valid: false,\r\n                validation: {\r\n                    number: true,\r\n                    length: 19\r\n                }\r\n            },\r\n            cardCode: {\r\n                value: '',\r\n                type: '',\r\n                label: '',\r\n                errorMessage: 'Insert correct code',\r\n                maximumLength:3,\r\n                valid: false,\r\n                validation: {\r\n                    number: true,\r\n                    length: 3\r\n                }\r\n            }\r\n        },\r\n        isCardCorrect: false,\r\n        isCardFound:false\r\n    }\r\n\r\n    applyHandler = async () => {\r\n        this.setState({\r\n            isFormValid: false\r\n        })\r\n\r\n        const cardData = {\r\n            number: this.state.formControls.card.value,\r\n            cardCode: this.state.formControls.cardCode.value,\r\n        }\r\n        try {\r\n            const response = await axios.get(`/cards?number=${cardData.number}`)\r\n\r\n            if (response.data.length === 1) {\r\n                const card = response.data[0]\r\n\r\n\r\n                if(card.code === cardData.cardCode) {\r\n                    const objectCard = {\r\n                        number: card.number,\r\n                        discount: card.discount\r\n                    }\r\n\r\n                    this.toFoundPopup()\r\n                    this.toSaveCardData(objectCard)\r\n                    this._toClearState()\r\n\r\n                }else{\r\n                    this.toNotCorrectPopup()\r\n                    this._toClearState()\r\n                }\r\n            } else {\r\n                this.toNotCorrectPopup()\r\n                this._toClearState()\r\n            }\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    toSaveCardData(obj) {\r\n        let isFindCard\r\n\r\n        this.state.isAnyCards.forEach((item) => {\r\n            isFindCard = (obj.number === item.number)\r\n        })\r\n\r\n        if (!isFindCard) {\r\n            this.setState((prevState) => (\r\n                {\r\n                    isAnyCards: prevState.isAnyCards.concat(obj),\r\n                    isAnyCard: true\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    toFoundPopup() {\r\n        this.setState((prevState) => ({\r\n            isCardFound: !prevState.isCardFound\r\n        }))\r\n    }\r\n\r\n    toNotCorrectPopup() {\r\n        this.setState((prevState) => ({\r\n            isCardCorrect: !prevState.isCardCorrect\r\n        }))\r\n    }\r\n\r\n    _toClearState() {\r\n        this.setState({\r\n            isFormValid: false,\r\n            formControls: {\r\n                card: {\r\n                    value: '',\r\n                    type: '',\r\n                    label: '',\r\n                    errorMessage: 'Insert correct card number',\r\n                    maximumLength:19,\r\n                    valid: false,\r\n                    validation: {\r\n                        number: true,\r\n                        length: 19\r\n                    }\r\n                },\r\n                cardCode: {\r\n                    value: '',\r\n                    type: '',\r\n                    label: '',\r\n                    errorMessage: 'Insert correct code',\r\n                    maximumLength:3,\r\n                    valid: false,\r\n                    validation: {\r\n                        number: true,\r\n                        length: 3\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n\r\n        if(validation.number) {\r\n            let val = +value\r\n            isValid = is.number(val) && isValid\r\n        }\r\n\r\n        if(validation.length) {\r\n            isValid = value.length >= validation.length && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    errorMessage={control.errorMessage}\r\n                    maximumLength={control.maximumLength}\r\n                    valid={control.valid}\r\n                    onChange={event => this.onChangeHandler(event,controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    renderPopup(label) {\r\n        return (\r\n            <PopupCustom label={label}/>\r\n        )\r\n    }\r\n\r\n    renderDivCard() {\r\n\r\n        return (this.state.isAnyCards).map((card,index) => {\r\n            const secretNumber = `**** **** **** **** ${card.number.slice(16)}`\r\n            const discount = `${String(card.discount)},00`\r\n\r\n            return (\r\n                <div key={index} className='cardDiv'>\r\n                    <div>\r\n                        <p>Gift card</p>\r\n                        <p>{secretNumber}</p>\r\n                    </div>\r\n                    <p>\r\n                        -&#8364;{discount}\r\n                    </p>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='cardForm'>\r\n                <form onSubmit={this.submitHandler}>\r\n\r\n                    <p>Please enter the 19-digit number and code from your gift card below</p>\r\n\r\n                    {\r\n                        this.state.isAnyCard\r\n                        ? this.renderDivCard(this.state.isAnyCards)\r\n                        :null\r\n                    }\r\n\r\n                    <div className='input__block'>\r\n                        {this.renderInputs()}\r\n                    </div>\r\n\r\n\r\n                    {\r\n                        this.state.isCardCorrect\r\n                        ? this.renderPopup('Your card is not accepted. Please try another card number or card code')\r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                        this.state.isCardFound\r\n                        ? this.renderPopup('Your card is accepted successfully!')\r\n                        : null\r\n                    }\r\n\r\n                    <Button\r\n                        onClick={this.applyHandler}\r\n                        disabled={!this.state.isFormValid}\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardForm\r\n","import React, {Component} from 'react';\r\n\r\nimport Input from '../../components/UI/Input/Input'\r\nimport CardForm from '../CardForm/CardForm'\r\n\r\nimport './Main.css';\r\n\r\nclass Main extends Component {\r\n\r\n\tstate={\r\n\t\thaveCard: false\r\n\t}\r\n\r\n\tisHaveCardHandler(){\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\thaveCard: !prevState.haveCard\r\n\t\t}))\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t    <div className=\"main\">\r\n\r\n\t\t      \t<h1>\r\n\t\t        \tGift Cards\r\n\t\t      \t</h1>\r\n\t\t      \t\r\n\t\t      \t<Input \r\n\t\t      \t\ttype='checkbox' \r\n\t\t      \t\tlabel='Do you have a gift card?' \r\n\t\t      \t\tvalid='true'\r\n\t\t      \t\tonChange={() => this.isHaveCardHandler()}\r\n\t\t      \t/>\r\n\r\n\t\t      \t{\r\n\t\t      \t\tthis.state.haveCard\r\n\t\t\t      \t\t? <CardForm />\r\n\t\t\t      \t\t: null\r\n\t\t      \t}\r\n\t\t    </div>\t \r\n  \t\t);\r\n\t}\r\n}\t\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport Main from './containers/Main/Main.js'\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}